{"version":3,"file":"main.js","mappings":"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","sources":["webpack://chat/./src/js/api/createRequest.js","webpack://chat/./src/js/api/Api.js","webpack://chat/./src/js/InstanceView.js","webpack://chat/./src/js/Dashboard.js","webpack://chat/./src/js/app.js","webpack://chat/./src/index.js"],"sourcesContent":["const createRequest = async (options = {}) => {\n  const response = await fetch(options.url, {\n    method: options.method,\n    body: JSON.stringify(options.data),\n  });\n\n  const json = await response.json();\n  return json;\n};\n\nexport default createRequest;\n","import createRequest from './createRequest';\n\nexport default class Api {\n  constructor() {\n    this.url = 'http://localhost:3000';\n  }\n\n  // Отправляем запрос на получение инстансов\n  list(callback) {\n    createRequest({\n      url: `${this.url}/`,\n      method: 'GET',\n    })\n      .then((result) => {\n        callback(result);\n      })\n      .catch((e) => {\n        console.error('Произошла ошибка: ', e);\n      });\n  }\n\n  // Отправляем запрос на создание инстанса\n  create() {\n    createRequest({\n      url: `${this.url}/`,\n      method: 'POST',\n    })\n      .catch((e) => {\n        console.error('Произошла ошибка: ', e);\n      });\n  }\n\n  // Отправляем запрос на удаение инстанса\n  delete(id) {\n    createRequest({\n      url: `${this.url}/?id=${id}`,\n      method: 'DELETE',\n    })\n      .catch((e) => {\n        console.error('Произошла ошибка: ', e);\n      });\n  }\n}\n","export default class InstanceView {\n  static drawInstance({ id, state }) {\n    const instance = document.createElement('div');\n    instance.classList.add('instances__item', 'instance');\n    instance.setAttribute('data-id', id);\n    instance.innerHTML = `\n      <p class=\"instance__id\">${id}</p>\n      <div class=\"instance__data status\">\n        <span class=\"status__text\">Status:</span>\n        <p class=\"status__state\"> \n          <span class=\"status__circle status__circle_${state === 'stopped' ? 'red' : 'green'}\"></span>\n          ${state}\n        </p>\n      </div>\n      <div class=\"instance__data actions\">\n        <span class=\"actions__text\">Actions:</span>\n        <div class=\"actions__buttons\">\n          <button type=\"button\" class=\"actions__btn actions__btn-toggle\">\n            <img src=\"./images/${state === 'stopped' ? 'play' : 'pause'}.svg\" alt=\"\">\n          </button>\n          <button type=\"button\" class=\"actions__btn actions__btn-delete\">\n            <img src=\"./images/delete.svg\" alt=\"\">\n          </button>\n        </div>\n      </div>\n    `;\n\n    return instance;\n  }\n}\n","import Api from './api/Api';\nimport InstanceView from './InstanceView';\n\nexport default class Dashbord {\n  constructor(container) {\n    this.container = container;\n    this.api = new Api();\n    this.websocket = null;\n\n    this.createInstance = this.createInstance.bind(this);\n  }\n\n  init() {\n    this.bindToDOM();\n    this.registerEvents();\n    this.getInstances();\n    this.websocket = new WebSocket('ws://localhost:3000/ws');\n    this.subscribeOnEvents();\n  }\n\n  // Отправляем запрос на инстансы и отрисовываем их\n  getInstances() {\n    this.api.list((response) => {\n      if (response) {\n        this.instances.innerHTML = '';\n        response.data.forEach((item) => {\n          const instance = InstanceView.drawInstance(item);\n          this.instances.append(instance);\n        });\n      }\n    });\n  }\n\n  bindToDOM() {\n    this.container.innerHTML = `\n      <div class=\"dashboard__block instances\">\n        <h2 class=\"instances__title title\">Your micro instances:</h2>\n        <div class=\"instances__wrapper\"></div>\n        <button class=\"instances__btn-create\">Create new instance</button>\n      </div>\n      <div class=\"dashboard__block worklog\">\n        <h2 class=\"worklog__title title\">Worklog:</h2>\n        <div class=\"worklog__logs logs\">\n        </div>\n      </div>\n    `;\n\n    this.instances = this.container.querySelector('.instances__wrapper');\n    this.btnCreateInstance = this.container.querySelector('.instances__btn-create');\n    this.logs = this.container.querySelector('.logs');\n  }\n\n  // Добавяем обработчики событий\n  registerEvents() {\n    this.btnCreateInstance.addEventListener('click', this.createInstance);\n    this.instances.addEventListener('click', (e) => this.modifyInstance(e));\n\n    const eventSource = new EventSource(`${this.api.url}/sse`);\n\n    eventSource.addEventListener('open', () => console.log('sse open'));\n\n    eventSource.addEventListener('error', () => console.log('sse error'));\n\n    eventSource.addEventListener('message', (e) => {\n      const data = JSON.parse(e.data);\n      this.renderLog(data);\n      this.getInstances();\n    });\n  }\n\n  // Создаем инстанс\n  createInstance(e) {\n    e.preventDefault();\n    this.api.create();\n  }\n\n  modifyInstance(e) {\n    e.preventDefault();\n    const { target } = e;\n    const instance = target.closest('.instance');\n    if (!instance) return;\n\n    const { id } = instance.dataset;\n\n    // Отправляем websocket id инстанса\n    if (target.closest('.actions__btn-toggle')) {\n      this.websocket.send(JSON.stringify({ id }));\n    }\n\n    // Удаляем инстанс\n    if (target.closest('.actions__btn-delete')) {\n      this.api.delete(id);\n    }\n  }\n\n  // Создаем лог\n  renderLog({ id, info, timestamp }) {\n    const log = document.createElement('div');\n    log.classList.add('worklog__item', 'log');\n    log.setAttribute('data-id', id);\n    log.innerHTML = `\n      <p class=\"log__date\">${timestamp}</p>\n      <p>Server: ${id}</p>\n      <p>INFO: ${info}</p>\n    `;\n\n    this.logs.append(log);\n    this.scroll(this.logs);\n  }\n\n  // Подписываемя на события websocket\n  subscribeOnEvents() {\n    this.websocket.addEventListener('open', () => console.log('open'));\n    this.websocket.addEventListener('message', () => console.log('message'));\n  }\n\n  // // Автоматическое пролистывание\n  scroll(element) {\n    element.scrollBy({\n      top: element.scrollHeight,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }\n}\n","import Dashboard from './Dashboard';\n\nconst root = document.querySelector('.dashboard__container');\n\nconst app = new Dashboard(root);\n\napp.init();\n","import './scss/dashboard.scss';\nimport './js/app';\n"],"names":["createRequest","options","arguments","length","undefined","response","fetch","url","method","body","JSON","stringify","data","json","Api","constructor","list","callback","then","result","catch","e","console","error","create","delete","id","InstanceView","drawInstance","_ref","state","instance","document","createElement","classList","add","setAttribute","innerHTML","Dashbord","container","api","websocket","createInstance","bind","init","bindToDOM","registerEvents","getInstances","WebSocket","subscribeOnEvents","instances","forEach","item","append","querySelector","btnCreateInstance","logs","addEventListener","modifyInstance","eventSource","EventSource","log","parse","renderLog","preventDefault","target","closest","dataset","send","info","timestamp","scroll","element","scrollBy","top","scrollHeight","left","behavior","Dashboard","root","app"],"sourceRoot":""}